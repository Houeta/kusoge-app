name: CI Pipeline for catalog-svc

on:
  push:
    paths:
      - "app/catalog-svc/**"
      - ".github/workflows/catalog-svc.yml"
  workflow_dispatch:

env:
  SERVICE_NAME: catalog-svc
  IMAGE_NAME: "${{ vars.PROJECT_NAME }}-catalog-svc"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    outputs:
      git-sha: ${{ steps.git-sha.outputs.sha }}
      git-message: ${{ steps.git-message.outputs.message }}
    
    permissions:
      contents: write
      packages: write
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set output for Git short SHA
        id: git-sha
        run: echo "::set-output name=sha::$(git rev-parse --short HEAD)"

      - name: Fetch latest commit message
        id: git-message
        run: echo "::set-output name=message::$(git log -1 --pretty=format:%s)"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      # - name: Bump version and push tag
      #   id: tag_version
      #   uses: mathieudutour/github-tag-action@v6.2
      #   with:
      #     github_token: {{ secrets.GITHUB_TOKEN }} 
      
      - name: Push image
        uses: docker/build-push-action@v5
        with:
          context: app/${{ env.SERVICE_NAME }}
          push: true
          tags: |
            ${{ vars.REPO }}/${{ env.IMAGE_NAME }}:latest
            ${{ vars.REPO }}/${{ env.IMAGE_NAME }}:${{ steps.git-sha.outputs.sha }}

      - name: Trigger update workflow in the xasc repository
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PAT }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'Houeta',
              repo: 'kusoge-xasc',
              workflow_id: 'update-container-image.yaml',
              ref: 'main',
              inputs: {
                message: '${{ steps.git-message.outputs.message }}',
                image: '${{ vars.REPO }}/${{ env.IMAGE_NAME }}',
                sha: '${{ steps.git-sha.outputs.sha }}',
                helm_name: '${{ env.SERVICE_NAME }}'
              }
            })